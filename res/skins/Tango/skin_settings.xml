<!--
Description:
  The skin settings menu, floating on top of main skin window.

  Bug: qss 'qproperty-layoutAlignment' is not respected for stacked layout.
  No way to push SkinSettings to the right edge while keeping the area underneath clickable.

  https://bugs.launchpad.net/mixxx/+bug/1689196
  On OSX this widget is drawn behind main skin instead on top of it.
  I removed the stacked layout and placed skin settings on the right hand side of main skin.
-->
<Template>
  <WidgetGroup>
    <ObjectName>SkinSettingsContainer</ObjectName>
    <Layout>horizontal</Layout>
    <Size>205f,1me</Size>
    <Children>
      <WidgetGroup>
        <ObjectName>SkinSettings</ObjectName>
        <Layout>vertical</Layout>
        <Size>200f,1me</Size>
        <Children>
          <WidgetGroup>
            <ObjectName>SkinSettingsHeader</ObjectName>
            <Layout>horizontal</Layout>
            <SizePolicy>me,f</SizePolicy>
            <Children>
              <Label>
                <ObjectName>CategoryLabel</ObjectName>
                <Text>Decks / General</Text>
              </Label>
                <!-- push Close button to far right -->
                <WidgetGroup><Size>1me,1me</Size><Children/></WidgetGroup>
              <Template src="skin:button_2state.xml">
                <SetVariable name="ObjectName">SkinSettingsClose</SetVariable>
                <SetVariable name="Size">17f,24f</SetVariable>
                <SetVariable name="state_1_pressed">skinsettings_close.svg</SetVariable>
                <SetVariable name="state_1_unpressed">skinsettings_close.svg</SetVariable>
                <SetVariable name="ConfigKey">[Tango],skin_settings</SetVariable>
              </Template>
            </Children>
          </WidgetGroup>

          <WidgetGroup><!-- Main Decks Settings -->
            <ObjectName>SkinSettingsCategory</ObjectName>
            <Layout>vertical</Layout>
            <SizePolicy>me,max</SizePolicy>
            <Children>

              <Template src="skin:skin_settings_button_2state.xml">
                <SetVariable name="state_0_text">      Compact mode</SetVariable>
                <SetVariable name="state_1_text"> &#10004; Compact mode</SetVariable>
                <SetVariable name="Setting">[Tango],enforce_netbook_mode</SetVariable>
              </Template>

              <Template src="skin:skin_settings_button_2state.xml">
                <SetVariable name="state_0_text">      Symmetric Overviews</SetVariable>
                <SetVariable name="state_1_text"> &#10004; Symmetric Overviews</SetVariable>
                <SetVariable name="Setting">[Tango],symmetric_overviews</SetVariable>
              </Template>

              <Template src="skin:skin_settings_button_2state.xml">
                <SetVariable name="state_0_text">      Symmetric Time/Duration</SetVariable>
                <SetVariable name="state_1_text"> &#10004; Symmetric Time/Duration</SetVariable>
                <SetVariable name="Setting">[Tango],symmetric_time</SetVariable>
              </Template>

              <Template src="skin:skin_settings_button_2state.xml">
                <SetVariable name="state_0_text">      [ 4 &#9664;  8 ]  Hotcues</SetVariable>
                <SetVariable name="state_1_text">      [ 4  &#9654; 8 ]  Hotcues</SetVariable>
                <SetVariable name="Setting">[Tango],8_hotcues</SetVariable>
              </Template>

              <Template src="skin:skin_settings_button_2state.xml">
                <SetVariable name="state_0_text">      Track Comment</SetVariable>
                <SetVariable name="state_1_text"> &#10004; Track Comment</SetVariable>
                <SetVariable name="Setting">[Tango],trackComment</SetVariable>
              </Template>

              <Template src="skin:skin_settings_button_2state.xml">
                <SetVariable name="state_0_text">      BPM / Pitch Fader</SetVariable>
                <SetVariable name="state_1_text"> &#10004; BPM / Pitch Fader</SetVariable>
                <SetVariable name="Setting">[Tango],pitch_fader</SetVariable>
              </Template>

              <WidgetGroup><!-- Pitch/Key submenu -->
                <Layout>stacked</Layout>
                <MinimumSize>182,15</MinimumSize>
                <MaximumSize>182,17</MaximumSize>
                <SizePolicy>f,max</SizePolicy>
                <Children>
                  <!-- index 0 due to bug -->
                  <WidgetGroup><Size>0f,0f</Size></WidgetGroup>

                  <WidgetGroup><!-- translucent cover when Pitch slider is hidden -->
                    <ObjectName>SubmenuCover</ObjectName>
                    <Layout>vertical</Layout>
                    <SizePolicy>me,max</SizePolicy>
                    <Children/>
                    <Connection>
                      <ConfigKey persist="true">[Tango],pitch_fader</ConfigKey>
                      <BindProperty>visible</BindProperty>
                      <Transform><Not/></Transform>
                    </Connection>
                  </WidgetGroup>

                  <Template src="skin:skin_settings_button_2state.xml">
                    <SetVariable name="state_0_text">      Key Controls</SetVariable>
                    <SetVariable name="state_1_text"> &#10004; Key Controls</SetVariable>
                    <SetVariable name="Setting">[Tango],key_controls</SetVariable>
                  </Template>
                </Children>
              </WidgetGroup><!-- Pitch/Key submenu -->

              <Template src="skin:skin_settings_button_2state.xml">
                <SetVariable name="state_0_text">      Loop/Jump controls</SetVariable>
                <SetVariable name="state_1_text"> &#10004; Loop/Jump controls</SetVariable>
                <SetVariable name="Setting">[Tango],loop_beatjump_controls</SetVariable>
              </Template>

              <WidgetGroup>
                <ObjectName>DeckIndicatorSettings</ObjectName>
                <Layout>vertical</Layout>
                <Size>182f,30f</Size>
                <Children>
                  <Label>
                    <Size>182f,15f</Size>
                    <Text>Permanent Deck controls:</Text>
                    <Alignment>left</Alignment>
                  </Label>
                  <WidgetGroup>
                    <ObjectName>AlignTopLeft</ObjectName>
                    <Size>182f,15f</Size>
                    <Layout>horizontal</Layout>
                    <Children>
                      <Template src="skin:button_2state_persist.xml"><!-- Keylock -->
                        <SetVariable name="ObjectName">DeckButtonVisibility</SetVariable>
                        <SetVariable name="Size">15f,15f</SetVariable>
                        <SetVariable name="state_0_pressed">keylock_off.svg</SetVariable>
                        <SetVariable name="state_0_unpressed">keylock_off.svg</SetVariable>
                        <SetVariable name="state_1_pressed">keylock_on.svg</SetVariable>
                        <SetVariable name="state_1_unpressed">keylock_on.svg</SetVariable>
                        <SetVariable name="ConfigKeyPerm">[Tango],always_visible_keylock</SetVariable>
                      </Template>

                      <Template src="skin:button_2state_persist.xml">
                        <SetVariable name="ObjectName">DeckButtonVisibility</SetVariable>
                        <SetVariable name="Size">15f,15f</SetVariable>
                        <SetVariable name="state_0_pressed">eject.svg</SetVariable>
                        <SetVariable name="state_0_unpressed">eject.svg</SetVariable>
                        <SetVariable name="state_1_pressed">eject_pressed.svg</SetVariable>
                        <SetVariable name="state_1_unpressed">eject_pressed.svg</SetVariable>
                        <SetVariable name="ConfigKeyPerm">[Tango],always_visible_eject</SetVariable>
                      </Template>

                      <Template src="skin:button_2state_persist.xml">
                        <SetVariable name="ObjectName">DeckButtonVisibility</SetVariable>
                        <SetVariable name="Size">16f,15f</SetVariable>
                        <SetVariable name="state_0_pressed">slipmode_off.svg</SetVariable>
                        <SetVariable name="state_0_unpressed">slipmode_off.svg</SetVariable>
                        <SetVariable name="state_1_pressed">slipmode_visible.svg</SetVariable>
                        <SetVariable name="state_1_unpressed">slipmode_visible.svg</SetVariable>
                        <SetVariable name="ConfigKeyPerm">[Tango],always_visible_slipMode</SetVariable>
                      </Template>

                      <Template src="skin:button_2state_persist.xml">
                        <SetVariable name="ObjectName">DeckButtonVisibility</SetVariable>
                        <SetVariable name="Size">16f,15f</SetVariable>
                        <SetVariable name="state_0_pressed">repeat_off.svg</SetVariable>
                        <SetVariable name="state_0_unpressed">repeat_off.svg</SetVariable>
                        <SetVariable name="state_1_pressed">repeat_visible.svg</SetVariable>
                        <SetVariable name="state_1_unpressed">repeat_visible.svg</SetVariable>
                        <SetVariable name="ConfigKeyPerm">[Tango],always_visible_repeat</SetVariable>
                      </Template>

                      <Template src="skin:button_2state_persist.xml">
                        <SetVariable name="ObjectName">DeckButtonVisibility</SetVariable>
                        <SetVariable name="Size">15f,15f</SetVariable>
                        <SetVariable name="state_0_pressed">cf_center.svg</SetVariable>
                        <SetVariable name="state_0_unpressed">cf_center.svg</SetVariable>
                        <SetVariable name="state_1_pressed">cf_visible.svg</SetVariable>
                        <SetVariable name="state_1_unpressed">cf_visible.svg</SetVariable>
                        <SetVariable name="ConfigKeyPerm">[Tango],always_visible_cfOrientation</SetVariable>
                      </Template>

                      <Template src="skin:button_2state_persist.xml">
                        <SetVariable name="ObjectName">DeckButtonVisibility</SetVariable>
                        <SetVariable name="Size">15f,15f</SetVariable>
                        <SetVariable name="state_0_pressed">quantize_off.svg</SetVariable>
                        <SetVariable name="state_0_unpressed">quantize_off.svg</SetVariable>
                        <SetVariable name="state_1_pressed">quantize_visible.svg</SetVariable>
                        <SetVariable name="state_1_unpressed">quantize_visible.svg</SetVariable>
                        <SetVariable name="ConfigKeyPerm">[Tango],always_visible_quantize</SetVariable>
                      </Template>

                      <WidgetGroup><Size>4f,0f</Size></WidgetGroup>

                      <Template src="skin:button_2state_persist.xml">
                        <SetVariable name="ObjectName">DeckButtonVisibility</SetVariable>
                        <SetVariable name="Size">16f,15f</SetVariable>
                        <SetVariable name="state_0_pressed">stars_off.svg</SetVariable>
                        <SetVariable name="state_0_unpressed">stars_off.svg</SetVariable>
                        <SetVariable name="state_1_pressed">stars_visible.svg</SetVariable>
                        <SetVariable name="state_1_unpressed">stars_visible.svg</SetVariable>
                        <SetVariable name="ConfigKeyPerm">[Tango],stars</SetVariable>
                      </Template>

                      <WidgetGroup><Size>4f,0f</Size></WidgetGroup>

                      <Template src="skin:button_2state_persist.xml">
                        <SetVariable name="ObjectName">DeckButtonVisibility</SetVariable>
                        <SetVariable name="Size">28f,15f</SetVariable>
                        <SetVariable name="state_0_text">CUE</SetVariable>
                        <SetVariable name="state_1_text">CUE</SetVariable>
                        <SetVariable name="ConfigKeyPerm">[Tango],separate_cue_button</SetVariable>
                      </Template>
                    </Children>
                  </WidgetGroup>
                </Children>
              </WidgetGroup>

            </Children>
          </WidgetGroup>

          <Label><!-- Mixer Settings -->
            <ObjectName>CategoryLabel</ObjectName>
            <Text>Mixer</Text>
          </Label>
          <WidgetGroup>
            <ObjectName>SkinSettingsCategory</ObjectName>
            <Layout>vertical</Layout>
            <SizePolicy>f,max</SizePolicy>
            <Children>

              <WidgetGroup><!-- Channel mixer toggle + hint for big cover -->
                <Layout>stacked</Layout>
                <Size>182f,15f</Size>
                <Children>
                  <Template src="skin:skin_settings_button_2state.xml">
                    <SetVariable name="state_0_text">      Channel Mixer</SetVariable>
                    <SetVariable name="state_1_text"> &#10004; Channel Mixer</SetVariable>
                    <SetVariable name="Setting">[Tango],channel_mixer</SetVariable>
                  </Template>

                  <WidgetGroup><!-- Show hint when Channel mixer is visible -->
                    <Layout>vertical</Layout>
                    <SizePolicy>me,min</SizePolicy>
                    <Children>
                      <Label>
                        <ObjectName>CoverSpinnyHint</ObjectName>
                        <Size>182f,15f</Size>
                        <Text>                                   &#9664; !</Text>
                        <Connection>
                          <ConfigKey persist="true">[Tango],channel_mixer</ConfigKey>
                          <BindProperty>visible</BindProperty>
                        </Connection>
                      </Label>
                    </Children>
                    <Connection>
                      <ConfigKey persist="true">[Tango],spinnyCoverBIG</ConfigKey>
                      <BindProperty>visible</BindProperty>
                    </Connection>
                  </WidgetGroup>
                </Children>
              </WidgetGroup>

              <WidgetGroup><!-- EQ & QuickEffect knobs submenu -->
                <Layout>stacked</Layout>
                <Size>182f,30f</Size>
                <Children>
                  <!-- index 0 due to bug -->
                  <WidgetGroup><Size>0f,0f</Size></WidgetGroup>

                  <WidgetGroup><!-- translucent cover when Channel Mixer is hidden -->
                    <ObjectName>SubmenuCover</ObjectName>
                    <Layout>vertical</Layout>
                    <Size>182f,30f</Size>
                    <Children/>
                    <Connection>
                      <ConfigKey persist="true">[Tango],channel_mixer</ConfigKey>
                      <BindProperty>visible</BindProperty>
                      <Transform><Not/></Transform>
                    </Connection>
                  </WidgetGroup>

                  <WidgetGroup><!-- EQ Knobs button -->
                    <Layout>vertical</Layout>
                    <Size>182f,30f</Size>
                    <Children>

                      <Template src="skin:skin_settings_button_2state.xml">
                        <SetVariable name="state_0_text">      EQ Knobs</SetVariable>
                        <SetVariable name="state_1_text"> &#10004; EQ Knobs</SetVariable>
                        <SetVariable name="Setting">[Tango],eq_knobs</SetVariable>
                      </Template>

                      <WidgetGroup><!-- Filter knob submenu -->
                        <Layout>stacked</Layout>
                        <Size>182f,15f</Size>
                        <Children>
                          <!-- index 0 due to bug -->
                          <WidgetGroup><Size>0f,0f</Size></WidgetGroup>

                          <WidgetGroup><!-- translucent cover when EQ Knobs are hidden -->
                            <ObjectName>SubmenuCover</ObjectName>
                            <Layout>vertical</Layout>
                            <SizePolicy>me,me</SizePolicy>
                            <Children/>
                            <Connection>
                              <ConfigKey persist="true">[Tango],eq_knobs</ConfigKey>
                              <BindProperty>visible</BindProperty>
                              <Transform><Not/></Transform>
                            </Connection>
                          </WidgetGroup>

                          <Template src="skin:skin_settings_button_2state.xml">
                            <SetVariable name="state_0_text">      Quick Effect Knob</SetVariable>
                            <SetVariable name="state_1_text"> &#10004; Quick Effect Knob</SetVariable>
                            <SetVariable name="Setting">[Tango],filter_knob</SetVariable>
                          </Template>
                        </Children>
                      </WidgetGroup>

                    </Children>
                  </WidgetGroup><!-- EQ Knobs button --><!-- /Filter knob submenu -->

                </Children>
              </WidgetGroup><!-- /EQ & Filter knobs submenu -->

              <Template src="skin:skin_settings_button_2state.xml">
                <SetVariable name="state_0_text">      VU Meter</SetVariable>
                <SetVariable name="state_1_text"> &#10004; VU Meter</SetVariable>
                <SetVariable name="Setting">[Tango],vumeter</SetVariable>
              </Template>

              <Template src="skin:skin_settings_button_2state.xml">
                <SetVariable name="state_0_text">      Crossfader</SetVariable>
                <SetVariable name="state_1_text"> &#10004; Crossfader</SetVariable>
                <SetVariable name="Setting">[Tango],crossfader</SetVariable>
              </Template>

              <Template src="skin:skin_settings_button_2state.xml">
                <SetVariable name="state_0_text">      Mixer Bar</SetVariable>
                <SetVariable name="state_1_text"> &#10004; Mixer Bar</SetVariable>
                <SetVariable name="Setting">[Tango],mixerbar</SetVariable>
              </Template>
            </Children>
          </WidgetGroup><!-- /Mixer Settings -->

          <Label>
            <ObjectName>CategoryLabel</ObjectName>
            <Text>Spinny / Cover</Text>
          </Label>
          <WidgetGroup><!-- Spinny Settings -->
            <ObjectName>SkinSettingsCategory</ObjectName>
            <Layout>vertical</Layout>
            <SizePolicy>f,max</SizePolicy>
            <Children>

              <Template src="skin:skin_settings_button_3state.xml">
                <SetVariable name="state_0_text">      [ Spinny &#9664;  Cover    Off ]</SetVariable>
                <SetVariable name="state_1_text">      [ Spinny  &#9654; Cover    Off ]</SetVariable>
                <SetVariable name="state_2_text">      [ Spinny    Cover  &#9654; Off ]</SetVariable>
                <SetVariable name="Setting">[Tango],spinny_cover_none</SetVariable>
              </Template>

              <WidgetGroup><!-- Spinny/Cover small/BIG-->
                <Layout>stacked</Layout>
                <Size>182f,15f</Size>
                <Children>
                  <!-- index 0 due to bug -->
                  <WidgetGroup><Size>0f,0f</Size></WidgetGroup>

                  <WidgetGroup><!-- translucent cover when Spinny/Cover is hidden -->
                    <ObjectName>SubmenuCover</ObjectName>
                    <Layout>vertical</Layout>
                    <SizePolicy>me,me</SizePolicy>
                    <Children/>
                    <Connection>
                      <ConfigKey persist="true">[Tango],spinny_cover_none</ConfigKey>
                      <BindProperty>visible</BindProperty>
                      <Transform><IsEqual>2</IsEqual></Transform>
                    </Connection>
                  </WidgetGroup>

                  <WidgetGroup><!-- small/BIG button without Channel mixer -->
                    <Layout>vertical</Layout>
                    <Size>182f,15f</Size>
                    <Children>
                      <Template src="skin:skin_settings_button_2state.xml">
                        <SetVariable name="state_0_text">      [ ° &#9664;  O ]</SetVariable>
                        <SetVariable name="state_1_text">      [ °  &#9654; O ]</SetVariable>
                        <SetVariable name="Setting">[Tango],spinnyCoverBIG</SetVariable>
                      </Template>
                    </Children>
                  </WidgetGroup><!-- /small/BIG button without Channel mixer -->
                </Children>
              </WidgetGroup><!-- /Spinny/Cover small/BIG-->

              <WidgetGroup><!-- Show hint when Channel mixer is visible -->
                <Layout>vertical</Layout>
                <SizePolicy>me,min</SizePolicy>
                <Children>
                  <Label>
                    <ObjectName>CoverSpinnyHint</ObjectName>
                    <Size>182f,15f</Size>
                    <Text>      hide Channel Mixer</Text>
                    <Connection>
                      <ConfigKey persist="true">[Tango],channel_mixer</ConfigKey>
                      <BindProperty>visible</BindProperty>
                    </Connection>
                  </Label>
                  <Label>
                    <ObjectName>CoverSpinnyHint</ObjectName>
                    <Size>182f,15f</Size>
                    <Text>      to see big Cover/Spinny</Text>
                    <Connection>
                      <ConfigKey persist="true">[Tango],channel_mixer</ConfigKey>
                      <BindProperty>visible</BindProperty>
                    </Connection>
                  </Label>
                </Children>
                <Connection>
                  <ConfigKey persist="true">[Tango],spinnyCoverBIG</ConfigKey>
                  <BindProperty>visible</BindProperty>
                </Connection>
              </WidgetGroup>

              <WidgetGroup><!-- Spinny/Cover Cover on Spinny-->
                <Layout>stacked</Layout>
                <Size>182f,15f</Size>
                <Children>
                  <!-- index 0 due to bug -->
                  <WidgetGroup><Size>0f,0f</Size></WidgetGroup>

                  <WidgetGroup><!-- translucent cover when Spinny/Cover is hidden -->
                    <ObjectName>SubmenuCover</ObjectName>
                    <Layout>vertical</Layout>
                    <SizePolicy>me,me</SizePolicy>
                    <Children/>
                    <Connection>
                      <ConfigKey persist="true">[Tango],spinny_cover_none</ConfigKey>
                      <BindProperty>visible</BindProperty>
                      <Transform><IsEqual>0</IsEqual><Not/></Transform>
                    </Connection>
                  </WidgetGroup>

                  <WidgetGroup><!-- SpinnyCover submenu buttons -->
                    <Layout>vertical</Layout>
                    <Size>182f,15f</Size>
                    <Children>
                      <Template src="skin:skin_settings_button_2state.xml">
                        <SetVariable name="state_0_text">      Cover on Spinny</SetVariable>
                        <SetVariable name="state_1_text"> &#10004; Cover on Spinny</SetVariable>
                        <SetVariable name="Setting">[Tango],spinnyWithCoverArt</SetVariable>
                      </Template>
                    </Children>
                  </WidgetGroup><!-- Spinny/Cover submenu buttons -->
                </Children>
              </WidgetGroup><!-- /Spinny/Cover Cover on Spinny-->

            </Children>
          </WidgetGroup><!-- /Spinny Settings -->

          <Label><!-- Effects -->
            <ObjectName>CategoryLabel</ObjectName>
            <Text>Effects</Text>
          </Label>
          <WidgetGroup>
            <ObjectName>SkinSettingsCategory</ObjectName>
            <Layout>vertical</Layout>
            <SizePolicy>f,max</SizePolicy>
            <Children>

              <Template src="skin:skin_settings_button_2state.xml">
                <SetVariable name="state_0_text">      [ 2 &#9664;  4 ]  Effect Units</SetVariable>
                <SetVariable name="state_1_text">      [ 2  &#9654; 4 ]  Effect Units</SetVariable>
                <SetVariable name="Setting">[Tango],2or4_fxUnits</SetVariable>
              </Template>

              <Template src="skin:skin_settings_button_2state.xml">
                <SetVariable name="state_0_text">      Sampler FX buttons</SetVariable>
                <SetVariable name="state_1_text"> &#10004; Sampler FX buttons</SetVariable>
                <SetVariable name="Setting">[Tango],sampler_fx_buttons</SetVariable>
              </Template>

              <Template src="skin:skin_settings_button_2state.xml">
                <SetVariable name="state_0_text">      Mic/AUX FX buttons</SetVariable>
                <SetVariable name="state_1_text"> &#10004; Mic/AUX FX buttons</SetVariable>
                <SetVariable name="Setting">[Tango],micaux_fx_buttons</SetVariable>
              </Template>

            </Children>
          </WidgetGroup><!-- /Effects -->

          <Label><!-- Extras -->
            <ObjectName>CategoryLabel</ObjectName>
            <Text>Extras</Text>
          </Label>
          <WidgetGroup>
            <ObjectName>SkinSettingsCategory</ObjectName>
            <Layout>vertical</Layout>
            <SizePolicy>f,max</SizePolicy>
            <Children>

              <Template src="skin:skin_settings_button_2state.xml">
                <SetVariable name="state_0_text">      Preview Deck</SetVariable>
                <SetVariable name="state_1_text"> &#10004; Preview Deck</SetVariable>
                <SetVariable name="Setting">[PreviewDeck],show_previewdeck</SetVariable>
              </Template>

              <Template src="skin:skin_settings_sampler_rows.xml"/>
          
              <WidgetGroup>
                <ObjectName>AlignLeft</ObjectName>
                <Layout>horizontal</Layout>
                <Size>182f,15f</Size>
                <Children>
                  <Template src="skin:button_1state.xml">
                    <SetVariable name="ObjectName">SkinSettingsButton</SetVariable>
                    <SetVariable name="Size">50f,15f</SetVariable>
                    <SetVariable name="state_0_text">      Load /</SetVariable>
                    <SetVariable name="Align">left</SetVariable>
                    <SetVariable name="ConfigKey">[Sampler],LoadSamplerBank</SetVariable>
                  </Template>
                  <Template src="skin:button_1state.xml">
                    <SetVariable name="ObjectName">SkinSettingsButton</SetVariable>
                    <SetVariable name="Size">122f,15f</SetVariable>
                    <SetVariable name="state_0_text"> Save Sampler Banks</SetVariable>
                    <SetVariable name="Align">left</SetVariable>
                    <SetVariable name="ConfigKey">[Sampler],SaveSamplerBank</SetVariable>
                  </Template>
                </Children>
              </WidgetGroup>

            </Children>
          </WidgetGroup><!-- /Extras -->
        </Children>
      </WidgetGroup><!-- SkinSettings -->
    </Children>
    <Connection>
      <ConfigKey>[Tango],skin_settings</ConfigKey>
      <BindProperty>visible</BindProperty>
    </Connection>
  </WidgetGroup>
</Template>
